[tox]
envlist = 
    py{38,39,310,311}
    lint
    security
    docs
    coverage
isolated_build = True

[testenv]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
commands = 
    pytest {posargs:tests/} -v --cov=src --cov-report=term-missing --cov-report=html
    coverage report --show-missing

[testenv:lint]
deps = 
    -r{toxinidir}/requirements-dev.txt
commands = 
    flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
    flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    black --check --diff src/ tests/
    isort --check-only --diff src/ tests/
    mypy src/

[testenv:security]
deps = 
    -r{toxinidir}/requirements-dev.txt
commands = 
    bandit -r src/ -f json -o bandit-report.json
    safety check

[testenv:docs]
deps = 
    -r{toxinidir}/requirements-dev.txt
commands = 
    sphinx-build -b html docs/ docs/_build/html
    sphinx-build -b linkcheck docs/ docs/_build/linkcheck

[testenv:coverage]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
commands = 
    coverage run --source=src -m pytest tests/ -v
    coverage report --show-missing
    coverage html
    coverage xml

[flake8]
max-line-length = 127
extend-ignore = E203, W503
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .tox,
    .venv,
    venv,
    env,
    .env

[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines = 
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG:
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov 